{
  "name": "modash",
  "version": "0.8.1",
  "description": "Modern MongoDB-inspired aggregation library for JavaScript",
  "type": "module",
  "sideEffects": false,
  "repository": {
    "type": "git",
    "url": "https://github.com/TomNeyland/modash.js"
  },
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "bin": {
    "modash": "dist/cli.js"
  },
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "types": "./dist/index.d.ts"
    }
  },
  "author": "Tom Neyland",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TomNeyland/modash.js/issues"
  },
  "keywords": [
    "mongodb",
    "aggregation",
    "pipeline",
    "javascript",
    "typescript",
    "functional",
    "data-processing",
    "modern-javascript"
  ],
  "files": [
    "dist/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md"
  ],
  "publishConfig": {
    "access": "public"
  },
  "engines": {
    "node": ">=18"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "scripts": {
    "test": "npm run test:units && npm run test:performance",
    "test:fast": "mocha --import=tsx/esm --exit tests/*.spec.js",
    "precommit:check": "npm run lint && npm run format:check && npm run typecheck && npm run test:fast && npm run test:debug",
    "test:units": "mocha --import=tsx/esm --exit --recursive tests/",
    "test:debug": "for f in tests/debug/*.mjs; do echo \"Running $f...\"; npx tsx \"$f\" || exit 1; done",
    "test:core": "mocha --import=tsx/esm --exit tests/count.spec.js tests/modash.spec.js tests/documentation-examples.spec.js tests/operators.spec.js tests/new-operators.spec.js tests/issue-41-regression.spec.js tests/ivm-regression.spec.js tests/ivm-context-chaining.spec.js tests/enhanced-operators.spec.js tests/phase3-optimization.spec.js",
    "test:streaming": "mocha --import=tsx/esm --exit tests/streaming.spec.js tests/streaming-comparison.spec.js tests/streaming-removal.spec.js tests/transparent-streaming.spec.js",
    "test:slow": "npm run test:streaming && mocha --import=tsx/esm --exit tests/aggregation.spec.js tests/enhanced-operators.spec.js tests/new-operators.spec.js tests/phase3-optimization.spec.js",
    "test:all": "npm run test:units && npm run test:debug && npm run test:performance",
    "test:performance": "node --import=tsx/esm benchmarks/performance-measurement.js",
    "test:watch": "mocha --import=tsx/esm tests/count.spec.js tests/modash.spec.js tests/documentation-examples.spec.js tests/operators.spec.js --watch",
    "test:coverage": "node scripts/coverage-tsx.mjs && npx c8 report --temp-directory=./coverage --reporter=text --reporter=lcov",
    "test:coverage:c8": "c8 --reporter=lcov --reporter=text mocha --import=tsx/esm --exit --recursive tests/",
    "test:coverage:nyc": "nyc mocha --import=tsx/esm --exit --recursive tests/",
    "test:coverage:node": "node --experimental-test-coverage --import=tsx/esm node_modules/.bin/mocha --exit --recursive tests/",
    "test:coverage:enhanced": "node scripts/coverage-tsx.mjs",
    "bench:operators": "node --import=tsx/esm benchmarks/micro-benchmarks.js",
    "bench:pipelines": "node --import=tsx/esm benchmarks/performance-measurement.js",
    "bench:ci": "node --expose-gc --import=tsx/esm benchmarks/ci-performance.js",
    "lint": "eslint src/ tests/ examples/",
    "lint:fix": "eslint src/ tests/ examples/ --fix",
    "format": "prettier --write \"src/**/*.{ts,json}\" \"tests/**/*.{js,ts,json}\" \"examples/**/*.{js,ts,json}\" \"*.{js,ts,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,json}\" \"tests/**/*.{js,ts,json}\" \"examples/**/*.{js,ts,json}\" \"*.{js,ts,json,md}\"",
    "build": "tsup",
    "build:watch": "tsup --watch",
    "docs": "echo 'Documentation already exists in docs/ directory'",
    "prepare": "node scripts/install-hooks.cjs",
    "prepack": "npm run build",
    "prepublishOnly": "npm run build && npm run type-check && npm run format:check && npm run pack:audit",
    "pack:audit": "node scripts/pack-audit.mjs",
    "quality": "npm run format:check && npm run lint && npm run type-check && npm run test:coverage",
    "quality:fix": "npm run format && npm run lint:fix",
    "type-check": "tsc --noEmit",
    "typecheck": "tsc --noEmit",
    "typecheck:watch": "tsc --noEmit --watch",
    "validate": "npm run quality",
    "precommit": "npm run validate",
    "ci": "npm run validate && npm run test:coverage && npm run test:performance && npm run ci:regression-gates",
    "ci:regression-gates": "node --import=tsx/esm ci-regression-gates.mjs",
    "phase3:validate": "npm run ci:regression-gates",
    "parity": "node --import=tsx/esm scripts/parity-runner.mjs",
    "test:hotpath:on": "HOT_PATH_STREAMING=1 npm run test:all",
    "test:hotpath:off": "DISABLE_HOT_PATH_STREAMING=1 npm run test:all",
    "test:debug:ivm": "DEBUG_IVM=1 npm run test:all",
    "test:debug:parity": "DEBUG_IVM_MISMATCH=1 npm run test:all",
    "test:debug:groupkeys": "DEBUG_GROUP_KEYS=1 npm run test:all",
    "test:debug:all": "DEBUG_IVM=1 DEBUG_IVM_MISMATCH=1 DEBUG_GROUP_KEYS=1 npm run test:all",
    "fixtures:generate": "tsx scripts/fixture-generator.ts generate",
    "fixtures:demo": "tsx scripts/fixture-generator.ts demo",
    "fixtures:test": "tsx scripts/fixture-generator.ts demo --size small",
    "test:fixtures": "mocha --import=tsx/esm --exit tests/fixtures/*.spec.js",
    "fixtures:large:generate": "tsx scripts/generate-large-fixtures.ts",
    "test:perf": "npm run fixtures:large:ensure && mocha --import=tsx/esm --exit tests/performance/*.perf.js",
    "test:perf:cli": "npm run fixtures:large:ensure && mocha --import=tsx/esm --exit tests/performance/cli-streaming.perf.js",
    "benchmark": "./scripts/benchmark-large.sh",
    "fixtures:large:ensure": "tsx scripts/generate-large-fixtures.ts",
    "fixtures:large:clean": "rm -rf fixtures/large"
  },
  "homepage": "https://github.com/TomNeyland/modash.js",
  "devDependencies": {
    "@faker-js/faker": "^10.0.0",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@microsoft/eslint-formatter-sarif": "^3.1.0",
    "@types/node": "^24.3.3",
    "@typescript-eslint/eslint-plugin": "^8.15.0",
    "@typescript-eslint/parser": "^8.15.0",
    "@vitest/coverage-v8": "^3.2.4",
    "c8": "^10.1.2",
    "chai": "^5.1.2",
    "commander": "^14.0.1",
    "eslint": "^9.15.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.6",
    "mocha": "^10.8.2",
    "nyc": "^17.1.0",
    "prettier": "^3.3.3",
    "source-map-support": "^0.5.21",
    "ts-node": "^10.9.2",
    "tsup": "^8.1.0",
    "tsx": "^4.19.2",
    "typescript": "^5.9.2",
    "v8-to-istanbul": "^9.3.0"
  },
  "dependencies": {
    "rxjs": "^7.8.2"
  }
}
